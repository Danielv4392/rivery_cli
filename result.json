{
  "river_definitions": {
    "river_name": "My Yaml Logic",
    "river_desc": "This is a river that had been created by yaml",
    "river_type": "logic"
  },
  "tasks_definitions": [
    {
      "task_type_id": "logic",
      "connection_id": {},
      "task_config": {
        "logic_steps": [
          {
            "step_name": "ods- US",
            "isEnabled": true,
            "isParallel": true,
            "container_running": "run_once",
            "nodes": [
              {
                "isEnabled": true,
                "content": {
                  "block_type": "river",
                  "block_primary_type": "river",
                  "river_id": {
                    "$oid": "59abe2a26b028e33a5cbae57"
                  }
                }
              },
              {
                "isEnabled": true,
                "content": {
                  "block_type": "river",
                  "block_primary_type": "river",
                  "river_id": {
                    "$oid": "5f072b53f5682c7583327358"
                  }
                }
              }
            ]
          },
          {
            "isEnabled": true,
            "content": {
              "block_primary_type": "sql",
              "block_type": "big_query_sql",
              "sql_query": "SELECT\n  accounts.registration_date as registration_date,\n  accounts._id as account_id ,\n  accounts.account_name as account_name,\n  accounts.account_type as account_type,\n  accounts.owner_email as owner_email,\n  accounts.step as reg_step_id,\n  case when accounts.step=1 then '1 - Account_Form'\n       when accounts.step=2 then '2 - Verification'\n       when accounts.step=3 then '3 - Test Connection'\n       when accounts.step=4 then '4 - Finish Account Creation'\n       else 'Unknown' end as reg_step_name,\n  accounts.status as account_status,\n  accounts.first_name as first_name,\n  accounts.last_name as last_name,\n  accounts.company_name as company_name,\n  accounts.country_code as country_code,\n  accounts.country as country,\n  accounts.phone_number as phone_number,\n  accounts.job_title as job_title,\n  accounts.is_technical_registration as is_technical_registration,\n  accounts.first_referrer_url as first_referrer_url,\n  accounts.first_url as first_url,\n  accounts.registration_target_type as registration_target_type,\n  accounts.current_units as current_rpu_units,\n  accounts.limitations.units as limitations_rpu_units,\n  accounts.limitations.days_trial as limitations_days_trial,\n  accounts.is_active as is_account_active,\n  accounts.partner as partner,\n  accounts.affiliate as affiliate,\n  accounts.wp_referrer as wp_referrer,\n  events.source_interest as source_interest,\n  events.target_interest as target_interest,\n  events.complete_target as complete_target,\n  events.flow_session_run_river as flow_session_run_river,\n  events.flow_session_run_river_success as flow_session_run_river_success,\n  events.flow_session_run_river_failures as flow_session_run_river_failures,\n  events.flow_session_success_run_congrats_message as flow_session_success_run_congrats_message,\n  events.flow_session_mapping_triggered as flow_session_mapping_triggered,\n  events.flow_session_mapping_success as flow_session_mapping_success,\n  activity.total_river_runs as total_river_runs,\n  activity.total_success_river_runs as total_success_river_runs,\n  activity.total_failure_river_runs as total_failure_river_runs\nFROM [visionbi-cloud:rivery_internal.ods_mongodb_accounts] as accounts\n  left join\n  (\n      SELECT\n      account as account_id,\n      max(case when event_data.name = 'source_interest' then event_data.value else null end) as source_interest,\n      max(case when event_data.name = 'target_interest' then event_data.value else null end) as target_interest,\n      max(case when event_data.name = 'complete_target' then event_data.value else null end) as complete_target,\n      sum(case when event_data.name = 'flow_session_run_river' then 1 else 0 end) as flow_session_run_river,\n      sum(case when event_data.name = 'flow_session_run_river_success' then 1 else 0 end) as flow_session_run_river_success,\n      sum(case when event_data.name = 'flow_session_run_river_failures' then 1 else 0 end) as flow_session_run_river_failures,\n      sum(case when event_data.name = 'flow_session_success_run_congrats_message' then 1 else 0 end) as flow_session_success_run_congrats_message,\n      sum(case when event_data.name = 'flow_session_mapping_triggered' then 1 else 0 end) as flow_session_mapping_triggered,\n      sum(case when event_data.name = '\tflow_session_mapping_success' then 1 else 0 end) as \tflow_session_mapping_success\n          FROM [visionbi-cloud:rivery_internal.ods_mongodb_registration_events]\n    group by account_id\n  )events\n  on accounts._id  = events.account_id\n\n  left join\n  (\n  SELECT account_id,\n  sum(case when task_status in( 'D','E') then 1 else 0 end) as  total_river_runs,\n  sum(case when task_status = 'D' then 1 else 0 end) as total_success_river_runs,\n  sum(case when task_status = 'E' then 1 else 0 end) as total_failure_river_runs,\n  sum(case when task_status = 'D' then rpu else 1 end) as total_rpu\n  FROM [visionbi-cloud:rivery_internal.v_fact_stats_activity]\n  group by account_id\n  )activity\n  on accounts._id  = activity.account_id",
              "query_priority": "interactive",
              "step_name": "dwh_dim_account_profiles",
              "drop_after": false,
              "target_type": "table",
              "connection_id": "55fa8ada70ec07e624d4313d",
              "split_tables": false,
              "use_standard_sql": false,
              "dataset_id": "rivery_internal",
              "target_loading": "overwrite"
            }
          },
          {
            "isEnabled": true,
            "content": {
              "block_type": "big_query_sql",
              "block_primary_type": "sql",
              "target_type": "variable",
              "variable_name": "batch_id",
              "sql_query": "select batch_id from logic_test.batches limit 1",
              "connection_id": "55fa8ada70ec07e624d4313d",
              "split_tables": false,
              "use_standard_sql": false,
              "query_priority": "interactive"
            }
          }
        ],
        "datasource_id": "logic",
        "fz_batched": true,
        "variables": {
          "batch_id": {
            "is_multi_value": false,
            "clear_value_on_start": false,
            "value": 123456
          },
          "q_time": {
            "is_multi_value": false,
            "clear_value_on_start": false,
            "value": 0
          }
        }
      }
    }
  ]
}